// Áõ¥Êé•ÈÄöÁü•API„ÉÜ„Çπ„ÉàÔºàË™çË®º„Å™„ÅóÔºâ
const { PrismaClient } = require('@prisma/client');

async function testDirectNotifications() {
  const prisma = new PrismaClient();
  
  try {
    console.log('=== Áõ¥Êé•ÈÄöÁü•„ÉÜ„Çπ„ÉàÔºàË™çË®º„Å™„ÅóÔºâ ===');
    
    const staffUserId = 'cmfdouvrq0001mku12p0r43zh'; // staff@example.com
    
    // Raw SQL„ÅßÈÄöÁü•ÂèñÂæó
    const unreadNotifications = await prisma.$queryRaw`
      SELECT * FROM notifications 
      WHERE userId = ${staffUserId} 
        AND "read" = false 
        AND createdAt >= datetime('now', '-24 hours')
      ORDER BY createdAt DESC 
      LIMIT 10
    `;
    
    console.log('ÂèñÂæó‰ª∂Êï∞:', unreadNotifications.length);
    
    // ÂãïÁöÑÈÄöÁü•ÈÖçÂàó„Å´Â§âÊèõ
    const dynamicNotifications = [];
    
    for (const notification of unreadNotifications) {
      console.log('Â§âÊèõ‰∏≠:', notification.id, '|', notification.title);
      
      // createdAt„ÇíISOÊñáÂ≠óÂàó„Å´Â§âÊèõÔºàÊó•‰ªò„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÅÆÂ†¥ÂêàÔºâ
      let timestamp;
      if (notification.createdAt instanceof Date) {
        timestamp = notification.createdAt.toISOString();
      } else if (typeof notification.createdAt === 'string') {
        // SQLite„ÅÆÊñáÂ≠óÂàóÊó•‰ªò„ÇíDate„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Å´Â§âÊèõ„Åó„Å¶„Åã„ÇâISOÊñáÂ≠óÂàó„Å´
        timestamp = new Date(notification.createdAt).toISOString();
      } else {
        timestamp = new Date().toISOString(); // fallback
      }
      
      dynamicNotifications.push({
        id: notification.id,
        type: notification.type || 'info',
        title: notification.title,
        message: notification.message,
        timestamp: timestamp,
        read: notification.read,
        notificationType: notification.notificationType || undefined,
        metadata: notification.metadata,
        userId: staffUserId
      });
    }
    
    console.log('Â§âÊèõÂæåÈÖçÂàó„Çµ„Ç§„Ç∫:', dynamicNotifications.length);
    
    if (dynamicNotifications.length > 0) {
      console.log('\nüì¶ Â§âÊèõ„Åï„Çå„ÅüÈÄöÁü•:');
      dynamicNotifications.forEach((notif, index) => {
        console.log(`${index + 1}. ${notif.title} (${notif.id})`);
        console.log(`   Type: ${notif.type}`);
        console.log(`   Timestamp: ${notif.timestamp}`);
        console.log(`   Read: ${notif.read}`);
      });
      
      console.log('\nüéØ JSONÁµêÊûú:');
      console.log(JSON.stringify(dynamicNotifications, null, 2));
    }
    
  } catch (error) {
    console.error('Áõ¥Êé•„ÉÜ„Çπ„Éà„Ç®„É©„Éº:', error.message);
    console.error('„Çπ„Çø„ÉÉ„ÇØ:', error.stack);
  } finally {
    await prisma.$disconnect();
  }
}

testDirectNotifications();